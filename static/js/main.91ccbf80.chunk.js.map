{"version":3,"sources":["Components/ShotsGrid.jsx","Components/TeamNameInputs.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ShotsGrid","shotsObject","currentPeriod","setShotsObject","teamNames","TSCol","returnShotTotal","team","total","objectKeys","Object","keys","i","length","shotsObjectMapped","map","periodKeyname","className","style","textShadow","period","toUpperCase","home","guest","Home","Guest","TeamNameInputs","setTeamNames","setTeamNameInputsInFocus","useState","homeName","setHomeName","guestName","setGuestName","inputContainer","useRef","submitButton","handleDocumentClick","e","current","target","contains","useEffect","document","addEventListener","removeEventListener","ref","type","defaultValue","onChange","value","onKeyUp","key","blur","handleKeyUP","onClick","makeTeamNameObjectAndSetNames","App","initilizeShotsObject","setCurrentPeriod","teamNameInputsInFocus","firstPeriod","secondPeriod","thirdPeriod","overTime","handleKeyPresses","shotsClone","thingThatNeedsToBeDupped","thingCopy","thingClone","Array","isArray","slice","objClone","push","duplicateObjectsInArrayOrObject","obj","bool","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91ccbf80.chunk.js","sourcesContent":["import React from 'react'\r\n// import useWindowDimensions from '../Hooks/useWindowDimensions';\r\n\r\nfunction ShotsGrid({shotsObject, setShotsObject, currentPeriod, teamNames}) {\r\n\r\n  // const {height, width} = useWindowDimensions();\r\n  const TSCol = 'hsl(300, 100%, 69%)';\r\n\r\n  function returnShotTotal(team) {\r\n    var total = 0;\r\n    var objectKeys = Object.keys(shotsObject);\r\n    for(let i = 0; i < objectKeys.length; i++) {\r\n      total += shotsObject[objectKeys[i]][team];\r\n    }\r\n    return total;\r\n  }\r\n\r\n  var shotsObjectMapped = Object.keys(shotsObject).map((periodKeyname) => {\r\n    return (\r\n      <div\r\n        key={periodKeyname}\r\n        className='period'\r\n      >\r\n        <h4\r\n          className='period-title'\r\n          style={{\r\n            // color: periodKeyname === currentPeriod ? 'red' : 'black'\r\n            textShadow: periodKeyname === currentPeriod && `-1px 0 ${TSCol}, 0 1px ${TSCol}, 1px 0 ${TSCol}, 0 -1px ${TSCol}`\r\n          }}\r\n        >{shotsObject[periodKeyname].period.toUpperCase()}</h4>\r\n\r\n        <div\r\n          className='period-shots'\r\n        >\r\n          <div\r\n            className='home-team-shots'\r\n          >\r\n            {shotsObject[periodKeyname].home}\r\n          </div>\r\n          <div\r\n            className='guest-team-shots'\r\n          >\r\n            {shotsObject[periodKeyname].guest}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div\r\n      className='shots-grid'\r\n    >\r\n      <div\r\n        className='teams'\r\n      >\r\n        <h4\r\n          className='period-title'\r\n        >Teams</h4>\r\n        <div\r\n          className='home-guest'\r\n        >\r\n          <div className=\"home-name\">{teamNames.Home}</div>\r\n          <div className=\"guest-name\">{teamNames.Guest}</div>\r\n        </div>\r\n      </div>\r\n      {shotsObjectMapped}\r\n      <div\r\n        className='shot-totals'\r\n      >\r\n        <h4\r\n          className='period-title'\r\n        >\r\n          Total\r\n        </h4>\r\n        <div\r\n          className='period-shots'\r\n        >\r\n          <div>{returnShotTotal('home')}</div>\r\n          <div>{returnShotTotal('guest')}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShotsGrid\r\n","import React from 'react'\r\nimport { useState, useRef, useEffect } from 'react'\r\n\r\nfunction TeamNameInputs({teamNames, setTeamNames, setTeamNameInputsInFocus}) {\r\n\r\n  const [homeName, setHomeName] = useState('Home');\r\n  const [guestName, setGuestName] = useState('Guest');\r\n\r\n  const inputContainer = useRef(null);\r\n  const submitButton = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleDocumentClick);\r\n    }\r\n  })\r\n\r\n  function makeTeamNameObjectAndSetNames(homeName, guestName, e) {\r\n    var obj = {Home: homeName, Guest: guestName};\r\n    setTeamNames(obj);\r\n\r\n    e.target.blur();\r\n    setTeamNameInputsInFocus(false);\r\n  } \r\n\r\n  function handleDocumentClick(e) {\r\n    if(submitButton.current === e.target) return\r\n\r\n    if(inputContainer.current && !inputContainer.current.contains(e.target)) {\r\n      setTeamNameInputsInFocus(false);\r\n    } else {\r\n      setTeamNameInputsInFocus(true);\r\n    }\r\n  }\r\n\r\n  function handleKeyUP(e) {\r\n    if(e.key === 'Enter') {\r\n      // e.preventDefault();\r\n      e.target.blur();\r\n      setTeamNameInputsInFocus(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='input-container' ref={inputContainer}>\r\n      <h4\r\n        className='team-name-title'\r\n      >Team Names</h4>\r\n\r\n      <input type=\"text\" defaultValue={homeName} onChange={(e) => setHomeName(e.target.value)}/>\r\n      <input type=\"text\" defaultValue={guestName} onChange={(e) => setGuestName(e.target.value)}/>\r\n      <input \r\n        className='team-names-submit-btn'\r\n        ref={submitButton}\r\n        type=\"button\" \r\n        onKeyUp={(e) => handleKeyUP(e)} \r\n        value=\"Enter\" \r\n        onClick={(e) => makeTeamNameObjectAndSetNames(homeName, guestName, e)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamNameInputs\r\n","\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport ShotsGrid from './Components/ShotsGrid.jsx';\nimport TeamNameInputs from './Components/TeamNameInputs.jsx'\n\nfunction App() {\n\n  const [shotsObject, setShotsObject] = useState(initilizeShotsObject());\n  const [currentPeriod, setCurrentPeriod] = useState('firstPeriod');\n  const [teamNames, setTeamNames] = useState({Home: 'Home', Guest: 'Guest'});\n  const [teamNameInputsInFocus, setTeamNameInputsInFocus] = useState(false);\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyPresses)\n    return () => {\n      document.removeEventListener('keyup', handleKeyPresses)\n    }\n  });\n\n  function initilizeShotsObject() {\n    var shots = {\n      firstPeriod: {home: 0, guest: 0, period: 'First Period'},\n      secondPeriod: {home: 0, guest: 0, period: 'Second Period'},\n      thirdPeriod: {home: 0, guest: 0, period: 'Third Period'},\n      overTime: {home: 0, guest: 0, period: 'Over Time'},\n    };\n\n    return shots;\n  }\n\n  function resetShotsObjectAndCurrentPeriod() {\n    setShotsObject(initilizeShotsObject());\n    setCurrentPeriod('firstPeriod');\n  }\n\n  // function useKey(key) {\n  //   // Keep track of key state\n  //   const [pressed, setPressed] = useState(false)\n\n  //   // Does an event match the key we're watching?\n  //   const match = event => key.toLowerCase() === event.key.toLowerCase()\n\n  //   // Event handlers\n  //   const onDown = event => {\n  //     if (match(event)) setPressed(true)\n  //   }\n\n  //   const onUp = event => {\n  //     if (match(event)) setPressed(false)\n  //   }\n\n  //   // Bind and unbind events\n  //   useEffect(() => {\n  //     window.addEventListener(\"keydown\", onDown)\n  //     window.addEventListener(\"keyup\", onUp)\n  //     return () => {\n  //       window.removeEventListener(\"keydown\", onDown)\n  //       window.removeEventListener(\"keyup\", onUp)\n  //     }\n  //   }, [key])\n\n  //   return pressed\n  // }\n\n  // if(useKey('k')) console.log('hello');\n\n  function handleKeyPresses(e) {\n\n    if(teamNameInputsInFocus) return;\n\n    let shotsClone = duplicateObjectsInArrayOrObject(shotsObject);\n\n    switch (e.key) {\n      case 'h':\n        shotsClone[currentPeriod].home += 1;\n        setShotsObject(shotsClone);\n        break;\n      case 'g':\n        shotsClone[currentPeriod].guest += 1;\n        setShotsObject(shotsClone);\n        break;\n      case '1':\n        if(currentPeriod !== 'firstPeriod') {\n          setCurrentPeriod('firstPeriod');\n        }\n        break;\n      case '2':\n        if(currentPeriod !== 'secondPeriod') {\n          setCurrentPeriod('secondPeriod');\n        }\n        break;\n      case '3':\n        if(currentPeriod !== 'thirdPeriod') {\n          setCurrentPeriod('thirdPeriod');\n        }\n        break;\n      case '4':\n        if(currentPeriod !== 'overTime') {\n          setCurrentPeriod('overTime');\n        }\n        break;\n      case 'b':\n        if(shotsClone[currentPeriod].guest !== 0) {\n          shotsClone[currentPeriod].guest -= 1;\n        }\n        setShotsObject(shotsClone);\n        break;\n      case 'n':\n        if(shotsClone[currentPeriod].home !== 0) {\n          shotsClone[currentPeriod].home -= 1;\n        }\n        setShotsObject(shotsClone);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function duplicateObjectsInArrayOrObject(thingThatNeedsToBeDupped) {\n    var thingCopy, thingClone;\n  \n    if(Array.isArray(thingThatNeedsToBeDupped)) {\n      thingCopy = thingThatNeedsToBeDupped.slice();\n      thingClone = [];\n      for(let i = 0; i < thingCopy.length; i++) {\n        let objClone = {...thingCopy[i]}\n    \n        thingClone.push(objClone);\n      }\n    } else {\n      thingCopy = {...thingThatNeedsToBeDupped};\n      thingClone = {};\n      for(let i = 0; i < Object.keys(thingCopy).length; i++) {\n        let objClone = {...thingCopy[Object.keys(thingCopy)[i]]}\n    \n        thingClone[Object.keys(thingCopy)[i]] = objClone;\n      }\n    }\n  \n    return thingClone;\n  }\n\n  return (\n    <div className=\"App\">\n      <TeamNameInputs \n        teamNames={teamNames} \n        setTeamNames={(obj) => setTeamNames(obj)} \n        setTeamNameInputsInFocus={(bool) => setTeamNameInputsInFocus(bool)}\n      />\n      <ShotsGrid \n        shotsObject={shotsObject} \n        setShotsObject={(obj) => {setShotsObject(obj)}} \n        currentPeriod={currentPeriod}\n        teamNames={teamNames}\n      />\n      <button\n        className='reset-btn'\n        onClick={() => resetShotsObjectAndCurrentPeriod()}\n      >RESET</button>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}